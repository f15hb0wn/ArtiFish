## Used to take input syslog messages and code examples to create parsers for training a codegen model.
import pandas as pd
import csv

# Specify the file path. CSV should have Product, Message, Code, and Test columns
file_path = './master_data.csv'

# Load the CSV file into a pandas DataFrame
df = pd.read_csv(file_path)

# Define the column names
columns = ['instruction','input_text', 'output_text']
with open('training_data.csv', 'w', newline='', encoding='utf-8') as file:
    writer = csv.writer(file)
    writer.writerow(columns)
    for index, row in df.iterrows():
        product = row['Product']
        syslog = row['Message']
        code = row['Code']
        test = row['Test']

        instruction = "Identify this syslog message"
        input_data = "{}".format(syslog)
        output_data = "This syslog message was probably generated by {}.".format(product)
        writer.writerow([instruction, input_data, output_data])

        instruction = "Write a WitFoo Parser for this product, syslog message"
        input_data = "{}, {}".format(product, syslog)
        output_data = "Here is a WitFoo Parser for the syslog message: <code>{}</code>".format(code)
        writer.writerow([instruction, input_data, output_data])

        instruction = "Create a test for this WitFoo Parser"
        input_data = "{}".format(code)
        output_data = "Here is a test for the WitFoo Parser: <code>{}</code>".format(test)
        writer.writerow([instruction, input_data, output_data])

        instruction = "Explain this code"
        input_data = "{}".format(code)
        output_data = "This code is a WitFoo Parser for the syslog messages created by {}.".format(product)
        writer.writerow([instruction, input_data, output_data])

